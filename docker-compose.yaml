version: "3.8"

services:
    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "3013:3013"
        restart: always
        container_name: frontend

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        ports:
            - "3014:8080"
        restart: always
        container_name: backend
        environment:
            - GOOGLE_API_KEY=AIzaSyCfGJVNIuZFuxEVsV7w0-DmXvIaiqbnb54
            - DB_HOST=postgres
            - DB_NAME=mydb
            - DB_USER=myuser
            - DB_PASSWORD=mypassword
            - DB_PORT=5432
            - DB_SSLMODE=disable
        depends_on:
            - postgres
    scraper:
        build:
            context: ./scraper
            dockerfile: Dockerfile
        expose:
            - "3015"
        restart: always
        container_name: scraper
        environment:
            - API_KEY=AIzaSyCfGJVNIuZFuxEVsV7w0-DmXvIaiqbnb54
            - DB_HOST=postgres
            - DB_NAME=mydb
            - DB_USER=myuser
            - DB_PASSWORD=mypassword
            - DB_PORT=5432
            - DB_SSLMODE=disable
        depends_on:
            - postgres
    postgres:
        image: postgres:17
        container_name: local_postgres
        restart: always
        environment:
            POSTGRES_USER: myuser
            POSTGRES_PASSWORD: mypassword
            POSTGRES_DB: mydb
            POSTGRES_PORT: 5432
            POSTGRES_HOST: postgres
            POSTGRES_MAX_CONNECTIONS: 100
           
        volumes:
            - pg_data:/var/lib/postgresql/data

volumes:
    pg_data:
